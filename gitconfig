[user]
    name = Audrey Montegut
    email = amontegut@kpler.com
[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto
  ui = auto

[color "branch"]
  current = green
  remote = yellow
[commit]
    # show the current diff when committing
    verbose = true
[core]
  pager = less -FRSX
  editor = code --wait
  autocrlf = input

[alias]
  co = checkout
  st = status -sb
  br = branch
  ci = commit
  fo = fetch origin
  d = !git --no-pager diff
  dt  = difftool
  stat = !git --no-pager diff --stat

  # Set remotes/origin/HEAD -> defaultBranch (copied from https://stackoverflow.com/a/67672350/14870317)
  remoteSetHead = remote set-head origin --auto

  # Get default branch name (copied from https://stackoverflow.com/a/67672350/14870317)
  defaultBranch = !git symbolic-ref refs/remotes/origin/HEAD | cut -d'/' -f4

  sweep = !git branch --merged main | grep -v 'main$' | xargs git branch -d && git remote prune origin

  # http://www.jukie.net/bart/blog/pimping-out-git-log
  lg = log --graph --all --pretty=format:'%Cred%h%Creset - %s %Cgreen(%cr) %C(bold blue)%an%Creset %C(yellow)%d%Creset'

  # Serve local repo. http://coderwall.com/p/eybtga
  # Then other can access via `git clone git://#{YOUR_IP_ADDRESS}/
  serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git

  # Checkout to defaultBranch
  m = !git checkout $(git defaultBranch)

  # Removes a file from the index
  unstage = reset HEAD --

[help]
  autocorrect = 1

[push]
    # on git push, only push current branch to the remote one with same name
    default = simple
    # push annotated tags on the branch as well when pushing branch
    followTags = true
    # automatically create a remote branch if missing
    autoSetupRemote = true

[branch "master"]
  mergeoptions = --no-edit

[pull]
  rebase = false

[init]
  defaultBranch = master
[user]
	email = audrey.montegut@gmail.com
	name = Audrey Montegut
